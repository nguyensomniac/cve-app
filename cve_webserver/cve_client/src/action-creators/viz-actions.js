import fetch from 'isomorphic-fetch';

export const RECEIVE_ARTICLES = 'RECEIVE_ARTICLES';
const receiveArticles = (articles) => {
  return {
     type: RECEIVE_ARTICLES,
     articles
  }
}

export const RECEIVE_ZIP_COUNTS = 'RECEIVE_ZIP_COUNTS';
const receiveZipCounts = (zipCounts) => {
  return {
    type: RECEIVE_ZIP_COUNTS,
    zipCounts
  }
}

export const fetchArticles = () => {
  return (dispatch) => {
    fetch('/api/articles')
      .then((response) => {
        if (response.status == 200) {
          return response.json();
        } else {
          return Promise.reject();
        }
      })
      .then((articles) => {
        dispatch(receiveArticles(articles));
        let zipCounts = {};
        for (let i = 0; i < articles.length; i++) {
          if (zipCounts[articles[i].ZIP]) {
            zipCounts[articles[i].ZIP] += 1;
          } else {
            zipCounts[articles[i].ZIP] = 1;
          }
        }
        dispatch(receiveZipCounts(zipCounts));
      })
  }
}

export const REQUEST_REGIONS = 'REQUEST_REGIONS';
const requestRegions = () => {
  return {
    type: REQUEST_REGIONS
  }
}

export const RECEIVE_REGIONS = 'RECEIVE_REGIONS';
const receiveRegions = (regions) => {
  return {
    type: RECEIVE_REGIONS,
    regions
  }
}

export const fetchRegions = () => {
  return (dispatch) => {
    fetch('/api/census_data')
      .then((response) => {
        if (response.status == 200) {
          return response.json();
        } else {
          return Promise.reject();
        }
      })
      .then((regions) => {
        dispatch(receiveRegions(regions));
      })
  }
}

// Controls active item on map.
export const SET_ACTIVE_ITEM = 'SET_ACTIVE_ITEM';
export const setActiveItem = (item) => {
  return {
    type: SET_ACTIVE_ITEM,
    item
  }
}

export const CLEAR_ACTIVE_ITEM = 'CLEAR_ACTIVE_ITEM';
export const clearActiveItem = () => {
  return {
    type: CLEAR_ACTIVE_ITEM
  }
}
