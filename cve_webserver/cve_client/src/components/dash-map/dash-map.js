import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Map, TileLayer, CircleMarker, Popup } from 'react-leaflet';

import styles from './dash-map.css';
import data from './berkeleyside-data.json';

class DashMap extends Component {
  static propTypes = {
    lat: PropTypes.number.isRequired,
    lon: PropTypes.number.isRequired,
    zoom: PropTypes.number.isRequired
  }
  constructor(props) {
    super(props);
    this.state = {
      visibleMarkerID: -1
    }
  }
  componentWillMount() {
    for (let i = 0; i < data.length; i++) {
      const story = data[i];
      if (!Number(story["Latitude (decimal form)"])) { continue; }
      const jitter = [(Math.random() - 0.5) * .0005, (Math.random() - 0.5) * .0005];
      story["Latitude (decimal form)"] = Number(story["Latitude (decimal form)"]) + jitter[0];
      story["Longitude (decimal form)"] = Number(story["Longitude (decimal form)"]) + jitter[1];
    }
  }

  setVisibleMarker(storyID) {
    return () => {
      this.setState({
        visibleMarkerID: storyID
      })
    }
  }
  renderTooltipIfNeeded(story) {
    const displayPopupClass = (this.state.visibleMarkerID === story.ID) ? "" : "hidePopup";
    return (
      <Popup>
        <span>
          <a href={story.URL}>
            {story.Title}
          </a>
        </span>
      </Popup>
    )
  }
  renderMarkers() {
    return (
      <div>
        {data.map((story) => {
          if (!Number(story["Latitude (decimal form)"])) { return; }
          return (
            <div key={story.ID}>
              <CircleMarker onClick={this.setVisibleMarker(story.ID)} radius={5} center={[story["Latitude (decimal form)"], story["Longitude (decimal form)"]]} stroke={false} color={"#32DCF6"} opacity={0.75}>
                {this.renderTooltipIfNeeded(story)}
              </CircleMarker>
            </div>
          )
        })}
      </div>
    )
  }
  render() {
    return (
      <Map className={styles.container} center={[this.props.lat, this.props.lon]} zoom={this.props.zoom}>
        <TileLayer url="https://api.mapbox.com/styles/v1/nguyensomniac/cj1q3lnh9002w2rpipklrlizw/tiles/512/{z}/{x}/{y}?access_token=pk.eyJ1Ijoibmd1eWVuc29tbmlhYyIsImEiOiJjaWZhNjY4OXQxeHgyczRtNzZ4OTVnbHFuIn0.auDKPGYvamGNI0tCmG_6bw"/>
        {this.renderMarkers()}
      </Map>
    )
  }
}

export default DashMap;
