import React, { Component } from 'react';

var ZingChart = require('zingchart-react').core;

// Data and styles
import styles from './support-charts.css';
import data from '../dash-map/berkeleyside-data.json';

class SupportCharts extends Component{
  constructor(props){
    super(props);

    // initial data trimming + obtain year and month
    var workableData = [];
    data.forEach((item) =>{
      workableData.push({
        "Author":item["Author"],
        "Date":item["Date"].slice(0,10),
        "Month": this.toMonth(item["Date"].slice(5,7)),
        "Year": item["Date"].slice(0,4),
        "ID":item["ID"],
        "Latitude":item["Latitude (decimal form)"],
        "Longitude":item["Longitude (decimal form)"],
        "Location":item["Natural Language Location"],
        "Title":item["Title"],
        "ZIP":item["Zip Code"]
      });
    });

    this.state = {
      query: [],
      data: workableData
    }
    // query is a list of area codes that Lily would return
    // default is no area code which means show everything

  }

  toMonth(numberString){
    numberString = Number(numberString);
    return numberString;
  }

  articlesByArea(data){
    var articlesByArea = {};
    data.forEach((item) => {
      if(item["ZIP"] in articlesByArea){
        articlesByArea[item["ZIP"]] += 1;
      }
      else{
        articlesByArea[item["ZIP"]] = 1;
      }
    });
    return articlesByArea;
  }

  articlesByMonth(data){
    var articlesByMonth = {};
    // "94704":[12, 23, 23, 24]
    data.forEach((item)=>{
      if(item["ZIP"] in articlesByMonth){
        articlesByMonth[item["ZIP"]][item["Month"]-1]++;
      }
      else{
        articlesByMonth[item["ZIP"]] = [0,0,0,0];
      }
    });
    return articlesByMonth;
  }

  render(){

    // configurations for the charts

    var articlesCount = this.articlesByArea(this.state.data);
    var articlesListByMonth = this.articlesByMonth(this.state.data);

    var AreaCodeLabels = Object.keys(articlesCount);
    var AreaCodeValues = [];
    AreaCodeLabels.forEach((item) => {
      AreaCodeValues.push(articlesCount[item]);
    });

    var MonthValues = [];
    AreaCodeLabels.forEach((item) => {
      MonthValues.push({ values: articlesListByMonth[item] });
    })

    var barConfig = {
      "scale-x": {
        labels: AreaCodeLabels
      },
      type: "bar",
      series : [
        { values : AreaCodeValues }
      ]
    };

    var lineConfig = {
      "scale-x": {
        labels: ["January", "February", "March", "April"]
      },
      type: "line",
      series : MonthValues
    };

    return(
      <div>
        <ZingChart id="barChart" height="300" width="600" data={barConfig} />
        <ZingChart id="lineChart" height="300" width="600" data={lineConfig} />
      </div>
    );
  }
}

export default SupportCharts;



    // TODO:
    // retrieve default state to all so that a chart is visible - DONE
    // retrieve data for this default state - DONE
    // define labels + summarizing information at the top of the chart
    // Implement bar graphs for total number of articles so far
    // Implement line graphs for number of articles per pin code over time

    // TODO Manipulations:
    // Summative coverage across all areas by number of articles (bar graph)
    // Month-by-month coverage across all areas by number of articles (line graph)
    // Tool-tip at each data point showing the population of that area and the tag that is covered the most

    // On selection from Lily's map
      // Show population of area(s) - comparative bar graph representation
      // Show population breakdown (use census data)
      // Month by month coverage across those areas (line graph)
      // Month by month coverage for ONE area by categories covered
